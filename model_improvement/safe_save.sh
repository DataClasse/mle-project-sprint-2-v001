#!/bin/bash
# –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô –°–ö–†–ò–ü–¢ –ë–ï–ó–û–ü–ê–°–ù–û–ì–û –°–û–•–†–ê–ù–ï–ù–ò–Ø
# –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω –¥–ª—è –º–Ω–æ–≥–æ—ç—Ç–∞–ø–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
# –ê–≤—Ç–æ—Ä: AI Assistant –¥–ª—è –∑–∞—â–∏—Ç—ã –∫–æ–¥–∞ –î–º–∏—Ç—Ä–∏—è
# ================================================

set -e

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –¥–µ—Ç–µ–∫—Ç–æ—Ä —ç—Ç–∞–ø–æ–≤
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
source "$PROJECT_ROOT/project_safety_detector.sh"

echo "üõ°Ô∏è  –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò"
echo "======================================"

# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —ç—Ç–∞–ø–µ
if ! project_safety_check; then
    echo "‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —ç—Ç–∞–ø–∞ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

echo

backup_and_commit() {
    local stage="$PROJECT_STAGE"
    local backup_path="$(get_backup_path $stage auto)"
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è backup'–æ–≤
    mkdir -p "$backup_path"
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞—â–∏—Ç—ã
    local files_to_protect=($(get_files_to_protect "$stage"))
    
    if [ ${#files_to_protect[@]} -eq 0 ]; then
        echo "‚ö†Ô∏è  –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞—â–∏—Ç—ã –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"
        return 1
    fi
    
    local backup_count=0
    local timestamp=$(date +%Y%m%d_%H%M%S)
    
    echo "üìã –°–æ—Ö—Ä–∞–Ω—è—é —Ñ–∞–π–ª—ã —ç—Ç–∞–ø–∞: $(get_stage_description $stage)"
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª
    for file in "${files_to_protect[@]}"; do
        if [ -f "$file" ]; then
            local filename=$(basename "$file")
            local extension="${filename##*.}"
            local basename="${filename%.*}"
            local backup_name="${basename}_${timestamp}.${extension}"
            
            cp "$file" "$backup_path/$backup_name"
            echo "‚úÖ Backup: $file ‚Üí $backup_name"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤ Git
            git add "$file"
            backup_count=$((backup_count + 1))
        fi
    done
    
    # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if git commit -m "[$stage] Auto backup - $(date '+%Y-%m-%d %H:%M:%S')"; then
        echo "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Git (—Ñ–∞–π–ª–æ–≤: $backup_count)"
    else
        echo "üìù –ù–µ—Ç –Ω–æ–≤—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
    fi
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    show_backup_stats "$backup_path" "$backup_count"
    
    echo "‚úÖ –≠—Ç–∞–ø '$stage' —Å–æ—Ö—Ä–∞–Ω–µ–Ω –±–µ–∑–æ–ø–∞—Å–Ω–æ!"
}

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ backup'–æ–≤
show_backup_stats() {
    local backup_path="$1"
    local current_count="$2"
    
    if [ -d "$backup_path" ]; then
        local total_backups=$(find "$backup_path" -type f | wc -l)
        local total_size=$(du -sh "$backup_path" 2>/dev/null | cut -f1)
        
        echo "üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê BACKUP'–û–í:"
        echo "   üìÅ –ü—É—Ç—å: $backup_path"
        echo "   üìù –í—Å–µ–≥–æ backup'–æ–≤: $total_backups"
        echo "   üíæ –†–∞–∑–º–µ—Ä: $total_size"
        echo "   ‚è∞ –ü–æ—Å–ª–µ–¥–Ω–∏–π: $(date '+%H:%M:%S')"
    fi
}

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö backup'–æ–≤ (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è)
cleanup_backups() {
    local stage="$PROJECT_STAGE"
    local backup_path="$(get_backup_path $stage auto)"
    
    if [ -d "$backup_path" ]; then
        echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö backup'–æ–≤ (>7 –¥–Ω–µ–π)..."
        
        # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã —Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π
        local deleted_count=$(find "$backup_path" -type f -mtime +7 -delete -print 2>/dev/null | wc -l)
        
        if [ "$deleted_count" -gt 0 ]; then
            echo "‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å—Ç–∞—Ä—ã—Ö backup'–æ–≤: $deleted_count"
        else
            echo "üìù –ù–µ—Ç —Å—Ç–∞—Ä—ã—Ö backup'–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"
        fi
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        local remaining=$(find "$backup_path" -type f | wc -l)
        echo "üìä –û—Å—Ç–∞–ª–æ—Å—å backup'–æ–≤: $remaining"
    fi
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üïê –ó–∞–ø—É—Å–∫: $(date '+%Y-%m-%d %H:%M:%S')"
    echo
    
    backup_and_commit
    echo
    cleanup_backups
    
    echo
    echo "======================================"
    echo "üöÄ –ì–æ—Ç–æ–≤–æ! –ú–æ–∂–µ—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å"
    echo "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '../project_safety_detector.sh' –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞"
}

# –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if [ "${BASH_SOURCE[0]}" == "${0}" ]; then
    main "$@"
fi
