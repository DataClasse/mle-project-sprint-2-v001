#!/usr/bin/env python3
"""
–ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –∏—Å—Ö–æ–¥–Ω—ã–º –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Å—Ç–æ–ª–±—Ü–æ–≤
"""

import pandas as pd
import os
from datetime import datetime

def align_datasets():
    """–ü—Ä–∏–≤–æ–¥–∏—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –∏—Å—Ö–æ–¥–Ω—ã–º"""
    
    print("üîß –ü–†–ò–í–ï–î–ï–ù–ò–ï –î–ê–¢–ê–°–ï–¢–ê –í –°–û–û–¢–í–ï–¢–°–¢–í–ò–ï")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞—Ç–∞—Å–µ—Ç—ã
    original_path = "data/initial_data_set.csv"
    improved_path = "data/merged_data_improved.csv"
    
    print(f"üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç: {original_path}")
    df_original = pd.read_csv(original_path)
    
    print(f"üì• –ó–∞–≥—Ä—É–∂–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç: {improved_path}")
    df_improved = pd.read_csv(improved_path)
    
    print(f"\nüìä –†–ê–ó–ú–ï–†–´:")
    print(f"   –ò—Å—Ö–æ–¥–Ω—ã–π: {df_original.shape[0]:,} √ó {df_original.shape[1]}")
    print(f"   –£–ª—É—á—à–µ–Ω–Ω—ã–π: {df_improved.shape[0]:,} √ó {df_improved.shape[1]}")
    
    # –ü–æ–ª—É—á–∞–µ–º —ç—Ç–∞–ª–æ–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞
    target_columns = list(df_original.columns)
    target_dtypes = df_original.dtypes.to_dict()
    
    print(f"\nüéØ –¶–ï–õ–ï–í–ê–Ø –°–¢–†–£–ö–¢–£–†–ê ({len(target_columns)} —Å—Ç–æ–ª–±—Ü–æ–≤):")
    for i, col in enumerate(target_columns, 1):
        print(f"   {i:2d}. {col} ({target_dtypes[col]})")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞
    current_columns = list(df_improved.columns)
    
    print(f"\nüîç –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï –£–õ–£–ß–®–ï–ù–ù–û–ì–û ({len(current_columns)} —Å—Ç–æ–ª–±—Ü–æ–≤):")
    
    # –ù–∞—Ö–æ–¥–∏–º —Ä–∞–∑–ª–∏—á–∏—è
    missing_cols = set(target_columns) - set(current_columns)
    extra_cols = set(current_columns) - set(target_columns)
    
    if missing_cols:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã: {missing_cols}")
    
    if extra_cols:
        print(f"‚ûï –õ–∏—à–Ω–∏–µ —Å—Ç–æ–ª–±—Ü—ã: {extra_cols}")
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
    df_aligned = df_improved.copy()
    
    print(f"\nüîß –ü–†–ò–ú–ï–ù–Ø–ï–ú –ò–ó–ú–ï–ù–ï–ù–ò–Ø:")
    
    # 1. –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º building_type_int –≤ building_type
    if 'building_type_int' in df_aligned.columns and 'building_type' not in df_aligned.columns:
        df_aligned = df_aligned.rename(columns={'building_type_int': 'building_type'})
        print("‚úÖ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω building_type_int ‚Üí building_type")
    
    # 2. –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ —Å—Ç–æ–ª–±—Ü—ã
    columns_to_drop = [col for col in df_aligned.columns if col not in target_columns]
    
    if columns_to_drop:
        print(f"üóëÔ∏è  –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ —Å—Ç–æ–ª–±—Ü—ã: {columns_to_drop}")
        df_aligned = df_aligned.drop(columns=columns_to_drop)
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω—É–∂–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
    missing_after_changes = set(target_columns) - set(df_aligned.columns)
    if missing_after_changes:
        print(f"‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ! –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å—Ç–æ–ª–±—Ü—ã: {missing_after_changes}")
        return None
    
    # 4. –ú–µ–Ω—è–µ–º –ø–æ—Ä—è–¥–æ–∫ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∏—Å—Ö–æ–¥–Ω—ã–º
    df_aligned = df_aligned[target_columns]
    print("‚úÖ –ü–æ—Ä—è–¥–æ–∫ —Å—Ç–æ–ª–±—Ü–æ–≤ –ø—Ä–∏–≤–µ–¥–µ–Ω –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ")
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
    print(f"\nüìã –ü–†–û–í–ï–†–ö–ê –¢–ò–ü–û–í –î–ê–ù–ù–´–•:")
    type_changes = []
    
    for col in target_columns:
        current_type = df_aligned[col].dtype
        target_type = target_dtypes[col]
        
        if current_type != target_type:
            type_changes.append((col, current_type, target_type))
            
            # –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –Ω—É–∂–Ω–æ–º—É —Ç–∏–ø—É
            try:
                df_aligned[col] = df_aligned[col].astype(target_type)
                print(f"   ‚úÖ {col}: {current_type} ‚Üí {target_type}")
            except Exception as e:
                print(f"   ‚ùå {col}: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å {current_type} ‚Üí {target_type} ({e})")
    
    if not type_changes:
        print("   ‚úÖ –í—Å–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç")
    
    # 6. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    print(f"\n‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"   –†–∞–∑–º–µ—Ä: {df_aligned.shape[0]:,} √ó {df_aligned.shape[1]}")
    print(f"   –°—Ç–æ–ª–±—Ü—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∏—Å—Ö–æ–¥–Ω–æ–º—É: {'‚úÖ –î–∞' if list(df_aligned.columns) == target_columns else '‚ùå –ù–µ—Ç'}")
    
    # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    structure_match = True
    print(f"\nüìä –°–†–ê–í–ù–ï–ù–ò–ï –°–¢–†–£–ö–¢–£–†:")
    print(f"{'–°—Ç–æ–ª–±–µ—Ü':<20} {'–ò—Å—Ö–æ–¥–Ω—ã–π':<15} {'–ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π':<15} {'–°—Ç–∞—Ç—É—Å'}")
    print("-" * 65)
    
    for col in target_columns:
        orig_type = target_dtypes[col]
        aligned_type = df_aligned[col].dtype
        status = "‚úÖ" if orig_type == aligned_type else "‚ùå"
        if orig_type != aligned_type:
            structure_match = False
        print(f"{col:<20} {str(orig_type):<15} {str(aligned_type):<15} {status}")
    
    if structure_match:
        print(f"\nüéâ –°–¢–†–£–ö–¢–£–†–´ –ü–û–õ–ù–û–°–¢–¨–Æ –°–û–û–¢–í–ï–¢–°–¢–í–£–Æ–¢!")
    else:
        print(f"\n‚ö†Ô∏è  –ï—Å—Ç—å —Ä–∞–∑–ª–∏—á–∏—è –≤ —Ç–∏–ø–∞—Ö –¥–∞–Ω–Ω—ã—Ö")
    
    return df_aligned

def save_aligned_dataset(df_aligned):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç"""
    
    if df_aligned is None:
        print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
        return None
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –æ—Ä–∏–≥–∏–Ω–∞–ª–∞
    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
    backup_path = f"data/merged_data_improved_backup_{timestamp}.csv"
    
    print(f"\nüíæ –°–û–•–†–ê–ù–ï–ù–ò–ï:")
    print(f"   üìã –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é: {backup_path}")
    
    # –î–µ–ª–∞–µ–º –±—ç–∫–∞–ø
    import shutil
    shutil.copy2("data/merged_data_improved.csv", backup_path)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç
    output_path = "data/merged_data_improved_aligned.csv"
    df_aligned.to_csv(output_path, index=False)
    print(f"   ‚úÖ –ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {output_path}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    file_size = os.path.getsize(output_path) / 1024 / 1024
    print(f"   üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size:.1f} MB")
    
    return output_path

def validate_alignment():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è"""
    
    print(f"\nüîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –í–ê–õ–ò–î–ê–¶–ò–Ø:")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    df_original = pd.read_csv("data/initial_data_set.csv")
    df_aligned = pd.read_csv("data/merged_data_improved_aligned.csv")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    structure_ok = list(df_original.columns) == list(df_aligned.columns)
    types_ok = all(df_original[col].dtype == df_aligned[col].dtype for col in df_original.columns)
    
    print(f"   –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç–æ–ª–±—Ü–æ–≤: {'‚úÖ' if structure_ok else '‚ùå'}")
    print(f"   –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö: {'‚úÖ' if types_ok else '‚ùå'}")
    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {df_aligned.shape[0]:,}")
    
    if structure_ok and types_ok:
        print(f"\nüéâ –í–ê–õ–ò–î–ê–¶–ò–Ø –ü–†–û–ô–î–ï–ù–ê! –î–∞—Ç–∞—Å–µ—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        return True
    else:
        print(f"\n‚ùå –í–ê–õ–ò–î–ê–¶–ò–Ø –ù–ï –ü–†–û–ô–î–ï–ù–ê! –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    # –ü—Ä–∏–≤–æ–¥–∏–º –¥–∞—Ç–∞—Å–µ—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
    df_aligned = align_datasets()
    
    if df_aligned is not None:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        output_path = save_aligned_dataset(df_aligned)
        
        if output_path:
            # –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            validation_ok = validate_alignment()
            
            if validation_ok:
                print(f"\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:")
                print(f"   –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: data/merged_data_improved_aligned.csv")
                print(f"   –í–º–µ—Å—Ç–æ: data/initial_data_set.csv")
                print(f"   –ü—Ä–∏ —ç—Ç–æ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ –≤—Å–µ–º–∏ —Å–∫—Ä–∏–ø—Ç–∞–º–∏")
    
    print(f"\n‚úÖ –ü–†–û–¶–ï–°–° –ó–ê–í–ï–†–®–ï–ù")

if __name__ == "__main__":
    main()
